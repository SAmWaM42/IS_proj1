{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cshin\\\\OneDrive\\\\Documents\\\\GitHub\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Components\\\\chatbox.js\",\n  _s = $RefreshSig$();\nimport './chatbox.css';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { GlobalContext } from './ContextWrapper.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Message({\n  data,\n  isSender\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${isSender ? 'sender' : 'receiver'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timestamp\",\n      children: data.timestamp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Message;\nfunction Chatbox({\n  message,\n  reload\n}) {\n  _s();\n  const [input, setInput] = useState('');\n  const contextData = useContext(GlobalContext);\n  const {\n    myData\n  } = contextData || {};\n  const navigate = useNavigate();\n  const {\n    chatId\n  } = useParams();\n  console.log(message);\n  const hasMessages = message.length > 0;\n  const handleSend = async event => {\n    event.preventDefault();\n    if (input.trim()) {\n      console.log('Sending message:', input);\n      try {\n        const url = `http://localhost:5000/user/chats/${chatId}`;\n        const response = await fetch(url, {\n          credentials: 'include',\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: input\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Message not sent successfully.\");\n        }\n        console.log('Message sent successfully!');\n        setInput('');\n        if (reload) {\n          console.log(\"reloading\");\n          reload();\n        }\n      } catch (err) {\n        console.error(\"Error sending message:\", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: [hasMessages ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: message.map(msg => /*#__PURE__*/_jsxDEV(Message, {\n        data: msg,\n        isSender: msg.SenderId === myData._id\n      }, msg._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbox, \"lA1WRmtF21wdcPpS5BRzLbXoz7A=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c2 = Chatbox;\nexport default Chatbox;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","useParams","GlobalContext","jsxDEV","_jsxDEV","Message","data","isSender","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","timestamp","_c","Chatbox","message","reload","_s","input","setInput","contextData","myData","navigate","chatId","console","log","hasMessages","length","handleSend","event","preventDefault","trim","url","response","fetch","credentials","method","headers","body","JSON","stringify","ok","errorData","json","Error","err","error","map","msg","SenderId","_id","type","value","onChange","e","target","placeholder","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Cshin/OneDrive/Documents/GitHub/IS_proj1/Thrift-app/client/src/Components/chatbox.js"],"sourcesContent":["import './chatbox.css';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GlobalContext } from './ContextWrapper.js';\r\n\r\nfunction Message({ data, isSender }) {\r\n    return (\r\n        <div className={`message ${isSender ? 'sender' : 'receiver'}`}>\r\n            <p>{data.text}</p>\r\n            <p className=\"timestamp\">{data.timestamp}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Chatbox({ message, reload }) {\r\n    const [input, setInput] = useState('');\r\n    const contextData = useContext(GlobalContext);\r\n    const { myData } = contextData || {};\r\n    const navigate = useNavigate();\r\n    const { chatId } = useParams();\r\n\r\n    console.log(message);\r\n    const hasMessages = message.length > 0;\r\n\r\n    const handleSend = async (event) => {\r\n        event.preventDefault();\r\n        if (input.trim()) {\r\n            console.log('Sending message:', input);\r\n            try {\r\n                const url = `http://localhost:5000/user/chats/${chatId}`;\r\n                const response = await fetch(url, {\r\n                    credentials: 'include',\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ text: input }),\r\n                });\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.message || \"Message not sent successfully.\");\r\n                }\r\n                console.log('Message sent successfully!');\r\n                setInput('');\r\n                if (reload) {\r\n                    console.log(\"reloading\");\r\n                    reload();\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error sending message:\", err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbox\">\r\n            {hasMessages ? (\r\n                <div className=\"messages\">\r\n                    {message.map((msg) => (\r\n                        <Message\r\n                            key={msg._id}\r\n                            data={msg}\r\n                            isSender={msg.SenderId === myData._id}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1>New Chat</h1>\r\n                </div>\r\n            )}\r\n            <div className=\"input-area\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                />\r\n                <button onClick={handleSend}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbox;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}