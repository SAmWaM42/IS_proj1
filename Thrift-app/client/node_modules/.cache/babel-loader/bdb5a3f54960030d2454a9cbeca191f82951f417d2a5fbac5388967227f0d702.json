{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\components\\\\Login\\\\login.js\",\n  _s = $RefreshSig$();\nimport Form from '..Form/Form.js';\nimport Button from '../Button/Button.js';\nimport './login.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const input_field = {\n    name: '',\n    email: '',\n    password: ''\n  };\n  const form_field = {\n    name: '',\n    id: '',\n    type: ''\n  };\n  const id = useParams();\n  function handle_submit({\n    FormData,\n    onSubmit\n  }) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = Object.fromEntries(formData.entries());\n    console.log(data);\n    //add fetch to send data to the server here\n    //add a meand to distinguish between login and register fetch calls\n    if (id = '/Login') {\n      fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.name,\n          email: data.email\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    } else {\n      event.preventDefault();\n      const formData = new FormData(event.target);\n      const data = Object.fromEntries(formData.entries());\n      console.log(data);\n      //add fetch to send data to the server here\n      //add a meand to distinguish between login and register fetch calls\n\n      fetch('http://localhost:5000/Register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.name,\n          email: data.email\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n      if (id = '/Register') {\n        fields = [{\n          name: 'name',\n          id: 'name',\n          type: 'text',\n          value: input_field.name\n        }, {\n          name: 'email',\n          id: 'email',\n          type: 'email',\n          value: input_field.email\n        }, {\n          name: 'password',\n          id: 'password',\n          type: 'password',\n          value: input_field.password\n        }];\n      } else if (id = '/Login') {\n        fields = [{\n          name: 'email',\n          id: 'email',\n          type: 'email',\n          value: input_field.email\n        }, {\n          name: 'password',\n          id: 'password',\n          type: 'password',\n          value: input_field.password\n        }];\n      }\n      return /*#__PURE__*/_jsxDEV(Form, {\n        fields: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n_s(Login, \"+StTTESSSlSWBPwO6YZsFGRl1GQ=\", false, function () {\n  return [useParams];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Form","Button","useParams","useNavigate","jsxDEV","_jsxDEV","Login","_s","input_field","name","email","password","form_field","id","type","handle_submit","FormData","onSubmit","event","preventDefault","formData","target","data","Object","fromEntries","entries","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","fields","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/components/Login/login.js"],"sourcesContent":["import Form from '..Form/Form.js';\r\nimport Button from '../Button/Button.js';\r\nimport './login.css';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const input_field =\r\n    {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n\r\n\r\n    };\r\n    const form_field =\r\n    {\r\n        name: '',\r\n        id: '',\r\n        type: ''\r\n\r\n\r\n\r\n    }\r\n    const id = useParams();\r\n    function handle_submit({ FormData, onSubmit }) {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData.entries());\r\n        console.log(data);\r\n        //add fetch to send data to the server here\r\n        //add a meand to distinguish between login and register fetch calls\r\n        if (id = '/Login') {\r\n            fetch('http://localhost:5000/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json', },\r\n                body: JSON.stringify\r\n                    (\r\n                        {\r\n                            name: data.name,\r\n                            email: data.email,\r\n\r\n                        }\r\n\r\n                    ),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data));\r\n        } else {\r\n            event.preventDefault();\r\n            const formData = new FormData(event.target);\r\n            const data = Object.fromEntries(formData.entries());\r\n            console.log(data);\r\n            //add fetch to send data to the server here\r\n            //add a meand to distinguish between login and register fetch calls\r\n        \r\n                fetch('http://localhost:5000/Register', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json', },\r\n                    body: JSON.stringify\r\n                        (\r\n                            {\r\n                                name: data.name,\r\n                                email: data.email,\r\n\r\n                            }\r\n\r\n                        ),\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => console.log(data));\r\n\r\n            \r\n            \r\n            if (id = '/Register') {\r\n                fields = [\r\n                    { name: 'name', id: 'name', type: 'text', value: input_field.name },\r\n                    { name: 'email', id: 'email', type: 'email', value: input_field.email },\r\n                    { name: 'password', id: 'password', type: 'password', value: input_field.password },\r\n\r\n                ];\r\n            }\r\n            else  if (id = '/Login') {\r\n                fields = [\r\n\r\n                    { name: 'email', id: 'email', type: 'email', value: input_field.email },\r\n                    { name: 'password', id: 'password', type: 'password', value: input_field.password },\r\n\r\n                ];\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            return (\r\n\r\n                <Form fields />\r\n\r\n\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}