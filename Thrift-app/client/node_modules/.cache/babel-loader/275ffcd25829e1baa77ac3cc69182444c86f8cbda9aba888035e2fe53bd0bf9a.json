{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\components\\\\Login\\\\login.js\",\n  _s = $RefreshSig$();\nimport Form from '../Form/Form.js';\nimport Button from '../Button/Button.js';\nimport './login.css';\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  var fields = {};\n  const input_field = {\n    name: '',\n    email: '',\n    password: ''\n  };\n  const form_field = {\n    name: '',\n    id: '',\n    type: ''\n  };\n  var id = useLocation();\n  console.error(id);\n  if (id.pathname === '/Register') {\n    fields = [{\n      name: 'name',\n      id: 'name',\n      type: 'text',\n      value: input_field.name\n    }, {\n      name: 'email',\n      id: 'email',\n      type: 'email',\n      value: input_field.email\n    }, {\n      name: 'password',\n      id: 'password',\n      type: 'password',\n      value: input_field.password\n    }];\n  } else if (id.pathname === '/Login') {\n    fields = [{\n      name: 'email',\n      id: 'email',\n      type: 'email',\n      value: input_field.email\n    }, {\n      name: 'password',\n      id: 'password',\n      type: 'password',\n      value: input_field.password\n    }];\n  } else {\n    fields = [];\n    console.error('Invalid route');\n  }\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = Object.fromEntries(formData.entries());\n    console.log(data);\n    // Here you can send the data to your server\n    // For example, using fetch:\n    fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    fields: fields,\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 8\n  }, this);\n}\n_s(Login, \"cDAnUpip9S4KHwOUDmPel4v801w=\", false, function () {\n  return [useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Form","Button","React","useState","useEffect","useParams","useNavigate","useLocation","jsxDEV","_jsxDEV","Login","_s","fields","input_field","name","email","password","form_field","id","type","console","error","pathname","value","handleSubmit","event","preventDefault","formData","FormData","target","data","Object","fromEntries","entries","log","fetch","method","headers","body","JSON","stringify","then","response","json","catch","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/components/Login/login.js"],"sourcesContent":["import Form from '../Form/Form.js';\r\nimport Button from '../Button/Button.js';\r\nimport './login.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction Login() {\r\n\r\n    var fields = {};\r\n    const input_field =\r\n    {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n\r\n\r\n    };\r\n    const form_field =\r\n    {\r\n        name: '',\r\n        id: '',\r\n        type: ''\r\n\r\n\r\n\r\n    }\r\n    var id = useLocation();\r\n    console.error(id);\r\n   \r\n\r\n    if (id.pathname === '/Register') {\r\n        fields = [\r\n            { name: 'name', id: 'name', type: 'text', value: input_field.name },\r\n            { name: 'email', id: 'email', type: 'email', value: input_field.email },\r\n            { name: 'password', id: 'password', type: 'password', value: input_field.password },\r\n\r\n        ];\r\n    }\r\n    else if (id.pathname === '/Login') {\r\n        fields = [\r\n\r\n            { name: 'email', id: 'email', type: 'email', value: input_field.email },\r\n            { name: 'password', id: 'password', type: 'password', value: input_field.password },\r\n\r\n        ];\r\n\r\n\r\n\r\n    }\r\n    else \r\n    {\r\n        fields = [];\r\n        console.error('Invalid route');\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData.entries());\r\n        console.log(data);\r\n        // Here you can send the data to your server\r\n        // For example, using fetch:\r\n        fetch('http://localhost:5000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n       <Form fields={fields} onSubmit={handleSubmit} />\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}