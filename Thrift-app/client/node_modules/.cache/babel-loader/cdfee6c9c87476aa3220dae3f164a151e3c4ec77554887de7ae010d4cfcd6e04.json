{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport Form from '../Components/Form';\nimport Navbar from '../Components/Navbar';\nimport Chats from '../Components/Chats';\nimport ChatboxPage from './chatboxpage';\nimport Profile from './Profile.js';\nimport ViewProducts from './ViewProducts.js';\nimport ViewOrders from './ViewOrders.js';\nimport UserOrders from './userOrders.js';\nimport AdminProd from './AdminProd.js';\nimport AdminUser from './AdminUsers.js';\nimport { GlobalContext } from '../Components/ContextWrapper.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const contextData = useContext(GlobalContext);\n  const {\n    myData,\n    loggedIn\n  } = contextData;\n  console.log(myData);\n  const url = 'http://localhost:5000/user/me';\n  const location = useLocation();\n  const pathSeg = location.pathname.split('/').filter(segment => segment !== '');\n  const currentRoute = pathSeg[1];\n  const isMyDashboard = location.pathname === '/Dashboard';\n  const {\n    userId\n  } = useParams(); // ID from the URL (e.g., /profile/abc123)\n  const [me, setme] = useState(null);\n  const [notme, setNotme] = useState(null);\n  const [loadedMe, setloadedMe] = useState(false);\n  const [loadedNotMe, setloadedNotMe] = useState(false);\n  const [isCreatingChat, setIsCreatingChat] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loggedIn === false) {\n      navigate('/Login');\n    }\n  }, []);\n  var isMyProfile = loadedMe && me && (me._id.toString() === userId || !userId);\n  useEffect(() => {\n    const getme = async () => {\n      try {\n        const mydata = await fetch(url, {\n          credentials: 'include' // <-- You need this!\n        });\n        if (!mydata.ok) {\n          {\n            const errorData = await mydata.json();\n            throw new Error(errorData.message || 'Failed to fetch self');\n          }\n        }\n        const validdata = await mydata.json();\n        setme(validdata);\n        setloadedMe(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (!loadedMe) {\n      getme();\n    }\n  }, []);\n  const altUrl = `http://localhost:5000/user/${userId}`;\n  useEffect(() => {\n    const getnotme = async () => {\n      try {\n        if (userId) {\n          const mydata = await fetch(altUrl, {\n            credentials: 'include' // <-- You need this!\n          });\n          if (!mydata.ok) {\n            {\n              const errorData = await mydata.json();\n              throw new Error(errorData.message || 'Failed to fetch self');\n            }\n          }\n          const validdata = await mydata.json();\n          setNotme(validdata);\n          setloadedNotMe(true);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getnotme();\n  }, [userId]);\n  const startChat = async () => {\n    setIsCreatingChat(true);\n    try {\n      const response = await fetch('http://localhost:5000/user/chats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Important for sending cookies/session\n        body: JSON.stringify({\n          otherUser: notme._id // The ID of the profile currently being viewed\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to create or get chat.');\n      }\n      navigate(`/dashboard/chatbox/${data.chatId}`);\n    } catch (err) {\n      console.error(\"Error starting chat:\", err);\n    } finally {\n      setIsCreatingChat(false);\n    }\n  };\n  const button_data = {\n    className: 'Upload-button',\n    type: 'submit',\n    label: 'Upload'\n  };\n  const formdata = [{\n    label: 'name',\n    type: 'text',\n    name: 'name',\n    key: 'name'\n  }, {\n    label: 'description',\n    type: 'text',\n    name: 'description',\n    key: 'description'\n  }, {\n    label: 'price',\n    type: 'number',\n    name: 'price',\n    key: 'price'\n  }, {\n    label: 'Image',\n    type: 'file',\n    name: 'image',\n    key: 'image'\n  }];\n  let dash_nav_elements = [];\n  if (myData.role === 'seller') {\n    dash_nav_elements = [\n    //modify this to add more elements to the navbar\n\n    {\n      key: 'AddProduct',\n      Label: 'AddProduct',\n      destination: '/Dashboard/AddProduct'\n    }, {\n      key: 'Chats',\n      Label: 'Chats',\n      destination: '/Dashboard/Chats'\n    }, {\n      key: 'Profile',\n      Label: 'Profile',\n      destination: '/Dashboard/Profile'\n    }, {\n      key: 'myProducts',\n      Label: 'myProducts',\n      destination: '/Dashboard/myProducts'\n    }, {\n      key: 'myOrders',\n      Label: 'myOrders',\n      destination: '/Dashboard/myOrders'\n    }];\n  }\n  if (myData.role === \"buyer\") {\n    dash_nav_elements = [{\n      key: 'Chats',\n      Label: 'Chats',\n      destination: '/Dashboard/Chats'\n    }, {\n      key: 'Profile',\n      Label: 'Profile',\n      destination: '/Dashboard/Profile'\n    }, {\n      key: 'myOrders',\n      Label: 'myOrders',\n      destination: '/Dashboard/userOrders'\n    }];\n  }\n  if (myData.role === \"role\") {\n    dash_nav_elements = [{\n      key: 'Chats',\n      Label: 'Chats',\n      destination: '/Dashboard/Chats'\n    }, {\n      key: 'Profile',\n      Label: 'Profile',\n      destination: '/Dashboard/Profile'\n    }, {\n      key: 'adminProd',\n      Label: 'AdminProducts',\n      destination: '/Dashboard/userOrders'\n    }];\n  }\n  const dest_url = 'product';\n  if ((!userId || isMyDashboard) && !loadedNotMe) {\n    setloadedNotMe(true);\n  }\n  if (!loadedMe || !loadedNotMe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading your profile status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 16\n    }, this);\n  }\n  const renprofile = () => {\n    switch (currentRoute) {\n      case 'AddProduct':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            formData: formdata,\n            button_data: button_data,\n            dest_url: dest_url,\n            id: \"product-form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              form: \"product-form\" // replace with your Form's form id, or wrap Form in <form id=\"login-form\">\n              ,\n              className: \"login-button\",\n              children: \"Add Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this);\n      case 'Chats':\n        return /*#__PURE__*/_jsxDEV(Chats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this);\n      case 'chatbox':\n        return /*#__PURE__*/_jsxDEV(ChatboxPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this);\n      case 'Profile':\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          userData: myData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this);\n      case 'myProducts':\n        return /*#__PURE__*/_jsxDEV(ViewProducts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this);\n      case 'myOrders':\n        return /*#__PURE__*/_jsxDEV(ViewOrders, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this);\n      case 'userOrders':\n        return /*#__PURE__*/_jsxDEV(UserOrders, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 20\n        }, this);\n      case 'adminProd':\n        return /*#__PURE__*/_jsxDEV(AdminProd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this);\n      case 'adminUser':\n        return /*#__PURE__*/_jsxDEV(AdminUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return isMyProfile ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      link_data: dash_nav_elements,\n      renderButton: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renprofile()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: notme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startChat,\n      children: \"Start Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 17\n  }, this);\n}\n_s(Dashboard, \"z/eopw76C7G1nOR6XwX9dZOxEuk=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","useParams","useLocation","useNavigate","Form","Navbar","Chats","ChatboxPage","Profile","ViewProducts","ViewOrders","UserOrders","AdminProd","AdminUser","GlobalContext","jsxDEV","_jsxDEV","Dashboard","_s","contextData","myData","loggedIn","console","log","url","location","pathSeg","pathname","split","filter","segment","currentRoute","isMyDashboard","userId","me","setme","notme","setNotme","loadedMe","setloadedMe","loadedNotMe","setloadedNotMe","isCreatingChat","setIsCreatingChat","navigate","isMyProfile","_id","toString","getme","mydata","fetch","credentials","ok","errorData","json","Error","message","validdata","err","altUrl","getnotme","startChat","response","method","headers","body","JSON","stringify","otherUser","data","chatId","error","button_data","className","type","label","formdata","name","key","dash_nav_elements","role","Label","destination","dest_url","children","fileName","_jsxFileName","lineNumber","columnNumber","renprofile","formData","id","form","userData","link_data","renderButton","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Pages/Dashboard.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\n\r\nimport Form from '../Components/Form'\r\nimport Navbar from '../Components/Navbar';\r\nimport Chats from '../Components/Chats';\r\nimport ChatboxPage from './chatboxpage';\r\nimport Profile from './Profile.js';\r\nimport ViewProducts from './ViewProducts.js';\r\nimport ViewOrders from './ViewOrders.js';\r\nimport UserOrders from './userOrders.js'\r\nimport AdminProd from './AdminProd.js';\r\nimport AdminUser from './AdminUsers.js';\r\nimport { GlobalContext } from '../Components/ContextWrapper.js';\r\n\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n    const contextData = useContext(GlobalContext);\r\n\r\n    const { myData, loggedIn } = contextData;\r\n    console.log(myData);\r\n\r\n    const url = 'http://localhost:5000/user/me'\r\n    const location = useLocation();\r\n    const pathSeg = location.pathname.split('/').filter(segment => segment !== '');\r\n    const currentRoute = pathSeg[1];\r\n    const isMyDashboard = location.pathname === '/Dashboard';\r\n    const { userId } = useParams(); // ID from the URL (e.g., /profile/abc123)\r\n    const [me, setme] = useState(null);\r\n    const [notme, setNotme] = useState(null);\r\n    const [loadedMe, setloadedMe] = useState(false);\r\n    const [loadedNotMe, setloadedNotMe] = useState(false);\r\n    const [isCreatingChat, setIsCreatingChat] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n  \r\n      useEffect(()=>{\r\n    if (loggedIn===false) {\r\n        \r\n        navigate('/Login');\r\n    }},[])\r\n\r\n    var isMyProfile = loadedMe && me && (me._id.toString() === userId || !userId);\r\n    useEffect(() => {\r\n        const getme = async () => {\r\n            try {\r\n                const mydata = await fetch(url, {\r\n                    credentials: 'include', // <-- You need this!\r\n                });\r\n                if (!mydata.ok) {\r\n                    {\r\n                        const errorData = await mydata.json();\r\n                        throw new Error(errorData.message || 'Failed to fetch self');\r\n                    }\r\n                }\r\n\r\n                const validdata = await mydata.json();\r\n                setme(validdata);\r\n                setloadedMe(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        };\r\n        if (!loadedMe) {\r\n            getme();\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const altUrl = `http://localhost:5000/user/${userId}`;\r\n\r\n    useEffect(() => {\r\n        const getnotme = async () => {\r\n            try {\r\n                if (userId) {\r\n                    const mydata = await fetch(altUrl, {\r\n                        credentials: 'include', // <-- You need this!\r\n                    });\r\n                    if (!mydata.ok) {\r\n                        {\r\n                            const errorData = await mydata.json();\r\n                            throw new Error(errorData.message || 'Failed to fetch self');\r\n                        }\r\n                    }\r\n\r\n                    const validdata = await mydata.json();\r\n                    setNotme(validdata);\r\n                    setloadedNotMe(true);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        };\r\n        getnotme();\r\n\r\n\r\n    }, [userId])\r\n\r\n    const startChat = async () => {\r\n        setIsCreatingChat(true);\r\n        try {\r\n            const response = await fetch('http://localhost:5000/user/chats', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include', // Important for sending cookies/session\r\n                body: JSON.stringify({\r\n                    otherUser: notme._id // The ID of the profile currently being viewed\r\n                })\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Failed to create or get chat.');\r\n            }\r\n\r\n            navigate(`/dashboard/chatbox/${data.chatId}`)\r\n\r\n\r\n        }\r\n        catch (err) {\r\n            console.error(\"Error starting chat:\", err);\r\n\r\n        }\r\n        finally {\r\n            setIsCreatingChat(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const button_data =\r\n    {\r\n        className: 'Upload-button',\r\n        type: 'submit',\r\n        label: 'Upload',\r\n\r\n    }\r\n    const formdata = [\r\n\r\n        { label: 'name', type: 'text', name: 'name', key: 'name' },\r\n        { label: 'description', type: 'text', name: 'description', key: 'description' },\r\n        { label: 'price', type: 'number', name: 'price', key: 'price' },\r\n        { label: 'Image', type: 'file', name: 'image', key: 'image' }\r\n\r\n    ];\r\n    let dash_nav_elements = []\r\n\r\n\r\n    if (myData.role === 'seller') {\r\n        dash_nav_elements = [\r\n            //modify this to add more elements to the navbar\r\n\r\n            { key: 'AddProduct', Label: 'AddProduct', destination: '/Dashboard/AddProduct' },\r\n            { key: 'Chats', Label: 'Chats', destination: '/Dashboard/Chats' },\r\n            { key: 'Profile', Label: 'Profile', destination: '/Dashboard/Profile' },\r\n            { key: 'myProducts', Label: 'myProducts', destination: '/Dashboard/myProducts' },\r\n            { key: 'myOrders', Label: 'myOrders', destination: '/Dashboard/myOrders' }\r\n\r\n\r\n        ];\r\n    }\r\n    if (myData.role === \"buyer\") {\r\n        dash_nav_elements = [\r\n            { key: 'Chats', Label: 'Chats', destination: '/Dashboard/Chats' },\r\n            { key: 'Profile', Label: 'Profile', destination: '/Dashboard/Profile' },\r\n            { key: 'myOrders', Label: 'myOrders', destination: '/Dashboard/userOrders' }\r\n\r\n        ]\r\n    }\r\n    if (myData.role === \"role\") {\r\n        dash_nav_elements = [\r\n            { key: 'Chats', Label: 'Chats', destination: '/Dashboard/Chats' },\r\n            { key: 'Profile', Label: 'Profile', destination: '/Dashboard/Profile' },\r\n             { key: 'adminProd', Label: 'AdminProducts', destination: '/Dashboard/userOrders' }\r\n            \r\n        ]\r\n    }\r\n    \r\n\r\n    const dest_url = 'product';\r\n\r\n    if ((!userId || isMyDashboard) && !loadedNotMe) {\r\n\r\n        setloadedNotMe(true);\r\n\r\n    }\r\n\r\n\r\n    if (!loadedMe || !loadedNotMe) {\r\n        return <div>Loading your profile status...</div>;\r\n    }\r\n\r\n\r\n    const renprofile = () => {\r\n        switch (currentRoute) {\r\n            case 'AddProduct':\r\n                return (\r\n                    <div>\r\n                        <Form formData={formdata} button_data={button_data} dest_url={dest_url} id='product-form'></Form>\r\n                        <div className=\"button-group\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                form=\"product-form\"        // replace with your Form's form id, or wrap Form in <form id=\"login-form\">\r\n                                className=\"login-button\"\r\n                            >\r\n                                Add Product\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                );\r\n            case 'Chats':\r\n                return (\r\n                    <Chats></Chats>\r\n                );\r\n            case 'chatbox':\r\n                return (\r\n                    <ChatboxPage></ChatboxPage>\r\n                );\r\n            case 'Profile':\r\n                return (\r\n                    <Profile userData={myData}></Profile>\r\n                );\r\n            case 'myProducts':\r\n                return (\r\n                    <ViewProducts></ViewProducts>\r\n                );\r\n            case 'myOrders':\r\n                return (\r\n                    <ViewOrders></ViewOrders>\r\n                );\r\n                 case 'userOrders':\r\n                    return(\r\n                   <UserOrders></UserOrders>\r\n                    );\r\n                    case'adminProd':\r\n                    return(\r\n                    <AdminProd></AdminProd>\r\n\r\n                    );\r\n                    case 'adminUser':\r\n                        return(\r\n                       <AdminUser></AdminUser>\r\n                        );\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        isMyProfile ? (\r\n            <div>\r\n                <Navbar link_data={dash_nav_elements} renderButton={false} />\r\n                <div>\r\n                    {renprofile()}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        ) :\r\n            (\r\n                <div className=\"profile-page\">\r\n                    <h1>{notme.name}</h1>\r\n                    <button onClick={startChat} >Start Conversation</button>\r\n\r\n                </div>\r\n            )\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Dashboard;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAEtE,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKhE,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAMC,WAAW,GAAGpB,UAAU,CAACe,aAAa,CAAC;EAE7C,MAAM;IAAEM,MAAM;IAAEC;EAAS,CAAC,GAAGF,WAAW;EACxCG,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EAEnB,MAAMI,GAAG,GAAG,+BAA+B;EAC3C,MAAMC,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B,MAAMwB,OAAO,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,KAAK,EAAE,CAAC;EAC9E,MAAMC,YAAY,GAAGL,OAAO,CAAC,CAAC,CAAC;EAC/B,MAAMM,aAAa,GAAGP,QAAQ,CAACE,QAAQ,KAAK,YAAY;EACxD,MAAM;IAAEM;EAAO,CAAC,GAAGhC,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACiC,EAAE,EAAEC,KAAK,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6C,cAAc,EAAEC,iBAAiB,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM+C,QAAQ,GAAGzC,WAAW,CAAC,CAAC;EAG5BL,SAAS,CAAC,MAAI;IAChB,IAAIuB,QAAQ,KAAG,KAAK,EAAE;MAElBuB,QAAQ,CAAC,QAAQ,CAAC;IACtB;EAAC,CAAC,EAAC,EAAE,CAAC;EAEN,IAAIC,WAAW,GAAGP,QAAQ,IAAIJ,EAAE,KAAKA,EAAE,CAACY,GAAG,CAACC,QAAQ,CAAC,CAAC,KAAKd,MAAM,IAAI,CAACA,MAAM,CAAC;EAC7EnC,SAAS,CAAC,MAAM;IACZ,MAAMkD,KAAK,GAAG,MAAAA,CAAA,KAAY;MACtB,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC1B,GAAG,EAAE;UAC5B2B,WAAW,EAAE,SAAS,CAAE;QAC5B,CAAC,CAAC;QACF,IAAI,CAACF,MAAM,CAACG,EAAE,EAAE;UACZ;YACI,MAAMC,SAAS,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,CAAC;YACrC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,sBAAsB,CAAC;UAChE;QACJ;QAEA,MAAMC,SAAS,GAAG,MAAMR,MAAM,CAACK,IAAI,CAAC,CAAC;QACrCnB,KAAK,CAACsB,SAAS,CAAC;QAChBlB,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACVpC,OAAO,CAACC,GAAG,CAACmC,GAAG,CAAC;MACpB;IAEJ,CAAC;IACD,IAAI,CAACpB,QAAQ,EAAE;MACXU,KAAK,CAAC,CAAC;IACX;EAEJ,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMW,MAAM,GAAG,8BAA8B1B,MAAM,EAAE;EAErDnC,SAAS,CAAC,MAAM;IACZ,MAAM8D,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,IAAI3B,MAAM,EAAE;UACR,MAAMgB,MAAM,GAAG,MAAMC,KAAK,CAACS,MAAM,EAAE;YAC/BR,WAAW,EAAE,SAAS,CAAE;UAC5B,CAAC,CAAC;UACF,IAAI,CAACF,MAAM,CAACG,EAAE,EAAE;YACZ;cACI,MAAMC,SAAS,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,CAAC;cACrC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,sBAAsB,CAAC;YAChE;UACJ;UAEA,MAAMC,SAAS,GAAG,MAAMR,MAAM,CAACK,IAAI,CAAC,CAAC;UACrCjB,QAAQ,CAACoB,SAAS,CAAC;UACnBhB,cAAc,CAAC,IAAI,CAAC;QACxB;MACJ,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACVpC,OAAO,CAACC,GAAG,CAACmC,GAAG,CAAC;MACpB;IAEJ,CAAC;IACDE,QAAQ,CAAC,CAAC;EAGd,CAAC,EAAE,CAAC3B,MAAM,CAAC,CAAC;EAEZ,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1BlB,iBAAiB,CAAC,IAAI,CAAC;IACvB,IAAI;MACA,MAAMmB,QAAQ,GAAG,MAAMZ,KAAK,CAAC,kCAAkC,EAAE;QAC7Da,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDb,WAAW,EAAE,SAAS;QAAE;QACxBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,SAAS,EAAEhC,KAAK,CAACU,GAAG,CAAC;QACzB,CAAC;MACL,CAAC,CAAC;MACF,MAAMuB,IAAI,GAAG,MAAMP,QAAQ,CAACR,IAAI,CAAC,CAAC;MAClC,IAAI,CAACQ,QAAQ,CAACV,EAAE,EAAE;QACd,MAAM,IAAIG,KAAK,CAACc,IAAI,CAACb,OAAO,IAAI,+BAA+B,CAAC;MACpE;MAEAZ,QAAQ,CAAC,sBAAsByB,IAAI,CAACC,MAAM,EAAE,CAAC;IAGjD,CAAC,CACD,OAAOZ,GAAG,EAAE;MACRpC,OAAO,CAACiD,KAAK,CAAC,sBAAsB,EAAEb,GAAG,CAAC;IAE9C,CAAC,SACO;MACJf,iBAAiB,CAAC,KAAK,CAAC;IAC5B;EACJ,CAAC;EAMD,MAAM6B,WAAW,GACjB;IACIC,SAAS,EAAE,eAAe;IAC1BC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EAEX,CAAC;EACD,MAAMC,QAAQ,GAAG,CAEb;IAAED,KAAK,EAAE,MAAM;IAAED,IAAI,EAAE,MAAM;IAAEG,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAO,CAAC,EAC1D;IAAEH,KAAK,EAAE,aAAa;IAAED,IAAI,EAAE,MAAM;IAAEG,IAAI,EAAE,aAAa;IAAEC,GAAG,EAAE;EAAc,CAAC,EAC/E;IAAEH,KAAK,EAAE,OAAO;IAAED,IAAI,EAAE,QAAQ;IAAEG,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC/D;IAAEH,KAAK,EAAE,OAAO;IAAED,IAAI,EAAE,MAAM;IAAEG,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAEhE;EACD,IAAIC,iBAAiB,GAAG,EAAE;EAG1B,IAAI3D,MAAM,CAAC4D,IAAI,KAAK,QAAQ,EAAE;IAC1BD,iBAAiB,GAAG;IAChB;;IAEA;MAAED,GAAG,EAAE,YAAY;MAAEG,KAAK,EAAE,YAAY;MAAEC,WAAW,EAAE;IAAwB,CAAC,EAChF;MAAEJ,GAAG,EAAE,OAAO;MAAEG,KAAK,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAmB,CAAC,EACjE;MAAEJ,GAAG,EAAE,SAAS;MAAEG,KAAK,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAqB,CAAC,EACvE;MAAEJ,GAAG,EAAE,YAAY;MAAEG,KAAK,EAAE,YAAY;MAAEC,WAAW,EAAE;IAAwB,CAAC,EAChF;MAAEJ,GAAG,EAAE,UAAU;MAAEG,KAAK,EAAE,UAAU;MAAEC,WAAW,EAAE;IAAsB,CAAC,CAG7E;EACL;EACA,IAAI9D,MAAM,CAAC4D,IAAI,KAAK,OAAO,EAAE;IACzBD,iBAAiB,GAAG,CAChB;MAAED,GAAG,EAAE,OAAO;MAAEG,KAAK,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAmB,CAAC,EACjE;MAAEJ,GAAG,EAAE,SAAS;MAAEG,KAAK,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAqB,CAAC,EACvE;MAAEJ,GAAG,EAAE,UAAU;MAAEG,KAAK,EAAE,UAAU;MAAEC,WAAW,EAAE;IAAwB,CAAC,CAE/E;EACL;EACA,IAAI9D,MAAM,CAAC4D,IAAI,KAAK,MAAM,EAAE;IACxBD,iBAAiB,GAAG,CAChB;MAAED,GAAG,EAAE,OAAO;MAAEG,KAAK,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAmB,CAAC,EACjE;MAAEJ,GAAG,EAAE,SAAS;MAAEG,KAAK,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAqB,CAAC,EACtE;MAAEJ,GAAG,EAAE,WAAW;MAAEG,KAAK,EAAE,eAAe;MAAEC,WAAW,EAAE;IAAwB,CAAC,CAEtF;EACL;EAGA,MAAMC,QAAQ,GAAG,SAAS;EAE1B,IAAI,CAAC,CAAClD,MAAM,IAAID,aAAa,KAAK,CAACQ,WAAW,EAAE;IAE5CC,cAAc,CAAC,IAAI,CAAC;EAExB;EAGA,IAAI,CAACH,QAAQ,IAAI,CAACE,WAAW,EAAE;IAC3B,oBAAOxB,OAAA;MAAAoE,QAAA,EAAK;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpD;EAGA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,QAAQ1D,YAAY;MAChB,KAAK,YAAY;QACb,oBACIf,OAAA;UAAAoE,QAAA,gBACIpE,OAAA,CAACZ,IAAI;YAACsF,QAAQ,EAAEd,QAAS;YAACJ,WAAW,EAAEA,WAAY;YAACW,QAAQ,EAAEA,QAAS;YAACQ,EAAE,EAAC;UAAc;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjGxE,OAAA;YAAKyD,SAAS,EAAC,cAAc;YAAAW,QAAA,eACzBpE,OAAA;cACI0D,IAAI,EAAC,QAAQ;cACbkB,IAAI,EAAC,cAAc,CAAQ;cAAA;cAC3BnB,SAAS,EAAC,cAAc;cAAAW,QAAA,EAC3B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAId,KAAK,OAAO;QACR,oBACIxE,OAAA,CAACV,KAAK;UAAA+E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAEvB,KAAK,SAAS;QACV,oBACIxE,OAAA,CAACT,WAAW;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAEnC,KAAK,SAAS;QACV,oBACIxE,OAAA,CAACR,OAAO;UAACqF,QAAQ,EAAEzE;QAAO;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAE7C,KAAK,YAAY;QACb,oBACIxE,OAAA,CAACP,YAAY;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAErC,KAAK,UAAU;QACX,oBACIxE,OAAA,CAACN,UAAU;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAE5B,KAAK,YAAY;QACd,oBACDxE,OAAA,CAACL,UAAU;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAExB,KAAI,WAAW;QACf,oBACAxE,OAAA,CAACJ,SAAS;UAAAyE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAGvB,KAAK,WAAW;QACZ,oBACDxE,OAAA,CAACH,SAAS;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;IAKtC;EACJ,CAAC;EAQD,OAEI3C,WAAW,gBACP7B,OAAA;IAAAoE,QAAA,gBACIpE,OAAA,CAACX,MAAM;MAACyF,SAAS,EAAEf,iBAAkB;MAACgB,YAAY,EAAE;IAAM;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DxE,OAAA;MAAAoE,QAAA,EACKK,UAAU,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC,gBAGFxE,OAAA;IAAKyD,SAAS,EAAC,cAAc;IAAAW,QAAA,gBACzBpE,OAAA;MAAAoE,QAAA,EAAKhD,KAAK,CAACyC;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBxE,OAAA;MAAQgF,OAAO,EAAEnC,SAAU;MAAAuB,QAAA,EAAE;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvD,CACR;AAWb;AAACtE,EAAA,CAtRQD,SAAS;EAAA,QAQGf,WAAW,EAITD,SAAS,EAMXE,WAAW;AAAA;AAAA8F,EAAA,GAlBvBhF,SAAS;AAuRlB,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}