{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Pages\\\\chatboxpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './chatboxpage.css';\nimport Chatbox from '../Components/chatbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatboxPage() {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const url = `http://localhost:5000/user/chats/${chatId}`;\n  const [data, setdata] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const fetchConvo = async () => {\n      try {\n        const info = await fetch(url, {\n          credentials: 'include'\n        });\n        const result = await info.json();\n        if (!info.ok) {\n          // If server responded with an error status (e.g., 404, 500)\n          throw new Error(result.message || 'Failed to fetch conversation.');\n        }\n        setdata(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchConvo();\n    setLoaded(true);\n  }, []);\n  return loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-page\",\n    children: /*#__PURE__*/_jsxDEV(Chatbox, {\n      messages: data.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n_s(ChatboxPage, \"LPr41zvyzHocnMrB0RACs7JoaDU=\", false, function () {\n  return [useParams];\n});\n_c = ChatboxPage;\nexport default ChatboxPage;\nvar _c;\n$RefreshReg$(_c, \"ChatboxPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Chatbox","jsxDEV","_jsxDEV","ChatboxPage","_s","chatId","url","data","setdata","loaded","setLoaded","fetchConvo","info","fetch","credentials","result","json","ok","Error","message","err","console","log","className","children","messages","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Pages/chatboxpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './chatboxpage.css';\r\nimport Chatbox from '../Components/chatbox';\r\n\r\n\r\n\r\nfunction ChatboxPage() {\r\nconst {chatId}=useParams();\r\nconst url=`http://localhost:5000/user/chats/${chatId}`;\r\nconst [data,setdata]=useState(null);\r\nconst[loaded,setLoaded]=useState(false);\r\nuseEffect(()=>\r\n{\r\n    const fetchConvo=async () =>\r\n    {\r\n\r\n        \r\n    try\r\n    {\r\n     const info= await fetch(url,{credentials:'include'});\r\n     const result=await  info.json();\r\n        if (!info.ok) {\r\n                    // If server responded with an error status (e.g., 404, 500)\r\n                    throw new Error(result.message || 'Failed to fetch conversation.');\r\n                }\r\n     setdata(result);\r\n\r\n    }\r\n    catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n};\r\nfetchConvo();\r\n\r\nsetLoaded(true);\r\n},\r\n[])\r\n\r\n\r\n   \r\n    return (\r\n\r\n        loaded?(\r\n        <div className=\"chatbox-page\">\r\n\r\n            <Chatbox messages={data.messages}></Chatbox>\r\n         \r\n        </div>\r\n        ):\r\n        (\r\n            <div>\r\n                <h1>Loading chats</h1>\r\n            </div>\r\n\r\n        )\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ChatboxPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAACC;EAAM,CAAC,GAACN,SAAS,CAAC,CAAC;EAC1B,MAAMO,GAAG,GAAC,oCAAoCD,MAAM,EAAE;EACtD,MAAM,CAACE,IAAI,EAACC,OAAO,CAAC,GAACZ,QAAQ,CAAC,IAAI,CAAC;EACnC,MAAK,CAACa,MAAM,EAACC,SAAS,CAAC,GAACd,QAAQ,CAAC,KAAK,CAAC;EACvCC,SAAS,CAAC,MACV;IACI,MAAMc,UAAU,GAAC,MAAAA,CAAA,KACjB;MAGA,IACA;QACC,MAAMC,IAAI,GAAE,MAAMC,KAAK,CAACP,GAAG,EAAC;UAACQ,WAAW,EAAC;QAAS,CAAC,CAAC;QACpD,MAAMC,MAAM,GAAC,MAAOH,IAAI,CAACI,IAAI,CAAC,CAAC;QAC5B,IAAI,CAACJ,IAAI,CAACK,EAAE,EAAE;UACF;UACA,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,+BAA+B,CAAC;QACtE;QACXX,OAAO,CAACO,MAAM,CAAC;MAEhB,CAAC,CACD,OAAMK,GAAG,EACT;QACIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC;IACDT,UAAU,CAAC,CAAC;IAEZD,SAAS,CAAC,IAAI,CAAC;EACf,CAAC,EACD,EAAE,CAAC;EAIC,OAEID,MAAM,gBACNP,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAEzBtB,OAAA,CAACF,OAAO;MAACyB,QAAQ,EAAElB,IAAI,CAACkB;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3C,CAAC,gBAGF3B,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAER;AAKT;AAACzB,EAAA,CAtDQD,WAAW;EAAA,QACLJ,SAAS;AAAA;AAAA+B,EAAA,GADf3B,WAAW;AAyDpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}