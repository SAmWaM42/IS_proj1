{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Pages\\\\chatboxpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './chatboxpage.css';\nimport Chatbox from '../Components/chatbox';\nimport messages from '../../../server/Schemas/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatboxPage() {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const url = `http://localhost:5000/user/chats/${chatId}`;\n  const [data, setdata] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const fetchConvo = useCallback(async () => {\n    setLoaded(false); // Reset loaded state at the start of fetch\n\n    try {\n      const info = await fetch(url, {\n        credentials: 'include'\n      });\n      const result = await info.json();\n      if (!info.ok) {\n        // If server responded with an error status (e.g., 404, 500)\n        throw new Error(result.message || 'Failed to fetch conversation.');\n      }\n      setdata(result);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoaded(true);\n    }\n  }, [chatId, url]);\n  useEffect(() => {\n    fetchConvo();\n  }, [url]);\n  console.log(data.messages);\n  return loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-page\",\n    children: /*#__PURE__*/_jsxDEV(Chatbox, {\n      messages: (data === null || data === void 0 ? void 0 : data.messages) || [],\n      reload: fetchConvo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 17\n  }, this);\n}\n_s(ChatboxPage, \"Ov9iYwYUf1QLxH+LgfbcoRTMMW4=\", false, function () {\n  return [useParams];\n});\n_c = ChatboxPage;\nexport default ChatboxPage;\nvar _c;\n$RefreshReg$(_c, \"ChatboxPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useParams","Chatbox","messages","jsxDEV","_jsxDEV","ChatboxPage","_s","chatId","url","data","setdata","loaded","setLoaded","fetchConvo","info","fetch","credentials","result","json","ok","Error","message","err","console","log","className","children","reload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Pages/chatboxpage.js"],"sourcesContent":["import React, { useState, useEffect,useCallback} from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './chatboxpage.css';\r\nimport Chatbox from '../Components/chatbox';\r\nimport messages from '../../../server/Schemas/messages';\r\n\r\n\r\n\r\nfunction ChatboxPage() {\r\n    const { chatId } = useParams();\r\n    const url = `http://localhost:5000/user/chats/${chatId}`;\r\n    const [data, setdata] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n\r\n    const fetchConvo = useCallback(async () => {\r\n\r\n        \r\n            setLoaded(false); // Reset loaded state at the start of fetch\r\n          \r\n\r\n\r\n            try {\r\n                const info = await fetch(url, { credentials: 'include' });\r\n                const result = await info.json();\r\n                if (!info.ok) {\r\n                    // If server responded with an error status (e.g., 404, 500)\r\n                    throw new Error(result.message || 'Failed to fetch conversation.');\r\n                }\r\n                setdata(result);\r\n           \r\n\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n            finally {\r\n                setLoaded(true);\r\n            }\r\n        \r\n        \r\n\r\n\r\n    },[chatId, url])\r\n    useEffect(()=>{ fetchConvo()},[url])\r\n\r\nconsole.log(data.messages);\r\n\r\n    return (\r\n\r\n        loaded ? (\r\n            <div className=\"chatbox-page\">\r\n\r\n\r\n                <Chatbox messages={data?.messages || []} reload={fetchConvo} />\r\n            </div>\r\n        ) :\r\n            (\r\n                <div>\r\n                    <h1>Loading chats</h1>\r\n                </div>\r\n\r\n            )\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ChatboxPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAACC,WAAW,QAAO,OAAO;AAC7D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAMQ,GAAG,GAAG,oCAAoCD,MAAM,EAAE;EACxD,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAG3C,MAAMiB,UAAU,GAAGf,WAAW,CAAC,YAAY;IAGnCc,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;;IAIlB,IAAI;MACA,MAAME,IAAI,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;QAAEQ,WAAW,EAAE;MAAU,CAAC,CAAC;MACzD,MAAMC,MAAM,GAAG,MAAMH,IAAI,CAACI,IAAI,CAAC,CAAC;MAChC,IAAI,CAACJ,IAAI,CAACK,EAAE,EAAE;QACV;QACA,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,+BAA+B,CAAC;MACtE;MACAX,OAAO,CAACO,MAAM,CAAC;IAInB,CAAC,CACD,OAAOK,GAAG,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,SACO;MACJV,SAAS,CAAC,IAAI,CAAC;IACnB;EAKR,CAAC,EAAC,CAACL,MAAM,EAAEC,GAAG,CAAC,CAAC;EAChBX,SAAS,CAAC,MAAI;IAAEgB,UAAU,CAAC,CAAC;EAAA,CAAC,EAAC,CAACL,GAAG,CAAC,CAAC;EAExCe,OAAO,CAACC,GAAG,CAACf,IAAI,CAACP,QAAQ,CAAC;EAEtB,OAEIS,MAAM,gBACFP,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAGzBtB,OAAA,CAACH,OAAO;MAACC,QAAQ,EAAE,CAAAO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEP,QAAQ,KAAI,EAAG;MAACyB,MAAM,EAAEd;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC,gBAGF3B,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAER;AAKb;AAACzB,EAAA,CA5DQD,WAAW;EAAA,QACGL,SAAS;AAAA;AAAAgC,EAAA,GADvB3B,WAAW;AA+DpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}