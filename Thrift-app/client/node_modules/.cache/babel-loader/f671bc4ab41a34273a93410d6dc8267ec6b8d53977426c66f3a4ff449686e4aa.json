{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams, useLocation } from 'react-router-dom';\nimport Form from '../Components/Form';\nimport Navbar from '../Components/Navbar';\nimport Chats from '../Components/Chats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const url = 'http://localhost:5000/user/me';\n  const location = useLocation();\n  const pathSeg = location.pathname.split('/').filter(segment => segment !== '');\n  const currentRoute = pathSeg[1];\n  const isMyDashboard = location.pathname === '/Dashboard';\n  const {\n    userId\n  } = useParams(); // ID from the URL (e.g., /profile/abc123)\n  const [me, setme] = useState(null);\n  const [notme, setNotme] = useState(null);\n  const [loadedMe, setloadedMe] = useState(false);\n  const [loadedNotMe, setloadedNotMe] = useState(false);\n  const [isCreatingChat, setIsCtreatingChat] = useState(null);\n  var isMyProfile = loadedMe && me && (me._id.toString() === userId || !userId);\n  useEffect(() => {\n    const getme = async () => {\n      try {\n        const mydata = await fetch(url, {\n          credentials: 'include' // <-- You need this!\n        });\n        if (!mydata.ok) {\n          {\n            const errorData = await mydata.json();\n            throw new Error(errorData.message || 'Failed to fetch self');\n          }\n        }\n        const validdata = await mydata.json();\n        setme(validdata);\n        setloadedMe(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (!loadedMe) {\n      getme();\n    }\n  }, []);\n  const altUrl = `http://localhost:5000/user/${userId}`;\n  useEffect(() => {\n    const getnotme = async () => {\n      try {\n        if (userId) {\n          const mydata = await fetch(altUrl, {\n            credentials: 'include' // <-- You need this!\n          });\n          if (!mydata.ok) {\n            {\n              const errorData = await mydata.json();\n              throw new Error(errorData.message || 'Failed to fetch self');\n            }\n          }\n          const validdata = await mydata.json();\n          setNotme(validdata);\n          setloadedNotMe(true);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getnotme();\n  }, [userId]);\n  const startChat = async () => {\n    setIsCtreatingChat(true);\n    try {\n      const response = await fetch('http://localhost:5000/user/chats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Important for sending cookies/session\n        body: JSON.stringify({\n          otherUserId: notme._id // The ID of the profile currently being viewed\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to create or get chat.');\n      }\n      navigate;\n    } catch (err) {}\n  };\n  const button_data = {\n    className: 'Upload-button',\n    type: 'submit',\n    label: 'Upload'\n  };\n  const formdata = [{\n    label: 'name',\n    type: 'text',\n    name: 'name',\n    key: 'name'\n  }, {\n    label: 'description',\n    type: 'text',\n    name: 'description',\n    key: 'description'\n  }, {\n    label: 'price',\n    type: 'number',\n    name: 'price',\n    key: 'price'\n  }, {\n    label: 'Image',\n    type: 'file',\n    name: 'image',\n    key: 'image'\n  }];\n  const dash_nav_elements = [\n  //modify this to add more elements to the navbar\n\n  {\n    key: 'AddProduct',\n    Label: 'AddProduct',\n    destination: '/Dashboard/AddProduct'\n  }, {\n    key: 'Chats',\n    Label: 'Chats',\n    destination: '/Dashboard/Chats'\n  }];\n  const dest_url = 'product';\n  if ((!userId || isMyDashboard) && !loadedNotMe) {\n    setloadedNotMe(true);\n  }\n  if (!loadedMe || !loadedNotMe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading your profile status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }, this);\n  }\n  const renprofile = () => {\n    switch (currentRoute) {\n      case 'AddProduct':\n        return /*#__PURE__*/_jsxDEV(Form, {\n          formData: formdata,\n          button_data: button_data,\n          dest_url: dest_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 27\n        }, this);\n      case 'Chats':\n        return /*#__PURE__*/_jsxDEV(Chats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }, this);\n    }\n  };\n  return isMyProfile ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      link_data: dash_nav_elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renprofile()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: notme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 17\n  }, this);\n}\n_s(Dashboard, \"M3aM2Sk7b+nnJnXJ2Q3boYfV2cc=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useLocation","Form","Navbar","Chats","jsxDEV","_jsxDEV","Dashboard","_s","url","location","pathSeg","pathname","split","filter","segment","currentRoute","isMyDashboard","userId","me","setme","notme","setNotme","loadedMe","setloadedMe","loadedNotMe","setloadedNotMe","isCreatingChat","setIsCtreatingChat","isMyProfile","_id","toString","getme","mydata","fetch","credentials","ok","errorData","json","Error","message","validdata","err","console","log","altUrl","getnotme","startChat","response","method","headers","body","JSON","stringify","otherUserId","data","navigate","button_data","className","type","label","formdata","name","key","dash_nav_elements","Label","destination","dest_url","children","fileName","_jsxFileName","lineNumber","columnNumber","renprofile","formData","link_data","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Pages/Dashboard.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams , useLocation } from 'react-router-dom';\r\n\r\nimport Form from '../Components/Form'\r\nimport Navbar from '../Components/Navbar';\r\nimport Chats from '../Components/Chats';\r\nfunction Dashboard() {\r\n\r\n    const url='http://localhost:5000/user/me'\r\n    const location=useLocation();\r\n    const pathSeg=location.pathname.split('/').filter(segment=>segment!=='');\r\n    const currentRoute=pathSeg[1];\r\n    const isMyDashboard=location.pathname === '/Dashboard';\r\n    const {userId} = useParams(); // ID from the URL (e.g., /profile/abc123)\r\n    const[me,setme]  = useState(null);\r\n    const [notme,setNotme]=useState(null);\r\n    const[loadedMe,setloadedMe]=useState(false);\r\n    const[loadedNotMe,setloadedNotMe]=useState(false);\r\n    const[isCreatingChat,setIsCtreatingChat]=useState(null);\r\n\r\n\r\n\r\n\r\n\r\n\r\n      var isMyProfile = loadedMe && me && (me._id.toString() === userId||!userId);\r\n    useEffect(()=>\r\n    {\r\n        const getme=async ()=>\r\n        {\r\n            try{\r\n           const mydata = await fetch(url, {\r\n    credentials: 'include', // <-- You need this!\r\n});\r\n        if(!mydata.ok)\r\n        {\r\n            {\r\n                    const errorData = await mydata.json();\r\n                    throw new Error(errorData.message || 'Failed to fetch self');\r\n              }\r\n        }\r\n\r\n          const validdata= await  mydata.json();\r\n          setme(validdata);\r\n          setloadedMe(true);\r\n    }catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n\r\n};\r\n      if(!loadedMe)\r\n      {\r\n        getme();\r\n      }\r\n\r\n    },[])\r\n\r\n\r\n\r\nconst altUrl=`http://localhost:5000/user/${userId}`;\r\n\r\n        useEffect(()=>\r\n    {\r\n        const getnotme=async ()=>\r\n        {\r\n            try{\r\n                if(userId)\r\n                {\r\n           const mydata = await fetch(altUrl, {\r\n    credentials: 'include', // <-- You need this!\r\n});\r\n        if(!mydata.ok)\r\n        {\r\n            {\r\n                    const errorData = await mydata.json();\r\n                    throw new Error(errorData.message || 'Failed to fetch self');\r\n              }\r\n        }\r\n\r\n          const validdata= await  mydata.json();\r\n          setNotme(validdata);\r\n          setloadedNotMe(true);\r\n    }\r\n    }catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n\r\n};\r\n        getnotme();\r\n      \r\n\r\n    },[userId])\r\n\r\n    const startChat= async ()=>\r\n    {\r\n        setIsCtreatingChat(true);\r\n        try\r\n        {    \r\n            const response=await fetch('http://localhost:5000/user/chats', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include', // Important for sending cookies/session\r\n                body: JSON.stringify({\r\n                    otherUserId: notme._id // The ID of the profile currently being viewed\r\n                })\r\n            });\r\n              const data=await response.json();\r\n              if(!response.ok)\r\n              {\r\n                throw new Error(data.message || 'Failed to create or get chat.');\r\n              }\r\n\r\n              navigate\r\n\r\n\r\n        }\r\n        catch( err)\r\n        {\r\n\r\n        }\r\n    }\r\n \r\n   \r\n\r\n   \r\n  \r\n    const button_data =\r\n    {\r\n        className: 'Upload-button',\r\n        type: 'submit',\r\n        label: 'Upload',\r\n\r\n    }\r\n    const formdata = [\r\n\r\n        { label: 'name', type: 'text', name: 'name', key: 'name' },\r\n        { label: 'description', type: 'text', name: 'description', key: 'description' },\r\n        { label: 'price', type: 'number', name: 'price', key: 'price' },\r\n        { label: 'Image', type: 'file', name: 'image', key: 'image' }\r\n\r\n    ];\r\n     const dash_nav_elements = [\r\n        //modify this to add more elements to the navbar\r\n       \r\n        { key: 'AddProduct', Label: 'AddProduct', destination: '/Dashboard/AddProduct' },\r\n        { key: 'Chats', Label: 'Chats', destination: '/Dashboard/Chats' },\r\n      \r\n\r\n\r\n    ];\r\n\r\n    const dest_url = 'product';\r\n\r\nif((!userId||isMyDashboard)&&!loadedNotMe)\r\n    {\r\n      \r\n       setloadedNotMe(true);\r\n      \r\n    }\r\n   \r\n\r\nif (!loadedMe||!loadedNotMe) {\r\n        return <div>Loading your profile status...</div>;\r\n    }\r\n\r\n  \r\n        const renprofile=()=>\r\n        {\r\n            switch(currentRoute)\r\n            {\r\n                case 'AddProduct':\r\n                    return (\r\n                          <Form formData={formdata} button_data={button_data} dest_url={dest_url}></Form>\r\n                    );\r\n                case 'Chats':\r\n                    return(\r\n                  <Chats></Chats>\r\n                    );\r\n\r\n\r\n            }\r\n        }\r\n\r\n        \r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n     \r\n        isMyProfile ? (\r\n            <div>\r\n            <Navbar link_data={dash_nav_elements} />\r\n            <div>\r\n                {renprofile()}\r\n            </div>\r\n          \r\n     \r\n            </div>\r\n        ) :\r\n            ( \r\n                <div className=\"profile-page\">\r\n                  <h1>{notme.name}</h1>\r\n                  <button></button>\r\n\r\n                </div>\r\n            )\r\n      \r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}