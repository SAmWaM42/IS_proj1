{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Components\\\\Chats.js\",\n  _s = $RefreshSig$();\nimport './Chats.css';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n//ensure i do error handling and loading states in production code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chats() {\n  _s();\n  const navigate = useNavigate();\n  const [chats, setChats] = useState([]);\n  useEffect(() => {\n    const fetchChats = async () => {\n      const response = await fetch('http://localhost:5000/user/chats');\n      const data = await response.json();\n      setChats(data);\n    };\n    fetchChats();\n  }, []);\n  const handleChatClick = chatId => {\n    navigate(`/chatbox/${chatId}`);\n  };\n  const nochats = !chats;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleChatClick(chat._id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, chat._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Chats, \"Ulvj22MPNj+iCGDYMD2pvBW9ZCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Chats","_s","navigate","chats","setChats","fetchChats","response","fetch","data","json","handleChatClick","chatId","nochats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","onClick","_id","name","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Components/Chats.js"],"sourcesContent":["import './Chats.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//ensure i do error handling and loading states in production code\r\nfunction Chats() {\r\n    const navigate = useNavigate();\r\n    const [chats, setChats] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchChats = async () => {\r\n            const response = await fetch('http://localhost:5000/user/chats');\r\n            const data = await response.json();\r\n            setChats(data);\r\n        };\r\n\r\n        fetchChats();\r\n    }, []);\r\n\r\n    const handleChatClick = (chatId) => {\r\n        navigate(`/chatbox/${chatId}`);\r\n    };\r\n    const  nochats=!chats\r\n\r\n    return (\r\n        <div className=\"chats\">\r\n            <h2>Chats</h2>\r\n\r\n            <ul>\r\n                {chats.map((chat) => (\r\n                    <li key={chat._id} onClick={() => handleChatClick(chat._id)}>\r\n                        <div className=\"chat-item\">\r\n                            <h3>{chat.name}</h3>\r\n                            \r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chats;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAClB,CAAC;IAEDH,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAIC,MAAM,IAAK;IAChCT,QAAQ,CAAC,YAAYS,MAAM,EAAE,CAAC;EAClC,CAAC;EACD,MAAOC,OAAO,GAAC,CAACT,KAAK;EAErB,oBACIJ,OAAA;IAAKc,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEdnB,OAAA;MAAAe,QAAA,EACKX,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACZrB,OAAA;QAAmBsB,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACU,IAAI,CAACE,GAAG,CAAE;QAAAR,QAAA,eACxDf,OAAA;UAAKc,SAAS,EAAC,WAAW;UAAAC,QAAA,eACtBf,OAAA;YAAAe,QAAA,EAAKM,IAAI,CAACG;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnB;MAAC,GAJDE,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACjB,EAAA,CAnCQD,KAAK;EAAA,QACOH,WAAW;AAAA;AAAA2B,EAAA,GADvBxB,KAAK;AAqCd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}