{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Pages\\\\chatboxpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './chatboxpage.css';\nimport Chatbox from '../Components/chatbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatboxPage() {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const url = `http://localhost:5000/user/chats/${chatId}`;\n  const [data, setdata] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const fetchConvo = useCallback(async () => {\n    {\n      setLoaded(false); // Reset loaded state at the start of fetch\n      setIsEmpty(false); // Reset isEmpty state\n\n      try {\n        const info = await fetch(url, {\n          credentials: 'include'\n        });\n        const result = await info.json();\n        if (!info.ok) {\n          // If server responded with an error status (e.g., 404, 500)\n          throw new Error(result.message || 'Failed to fetch conversation.');\n        }\n        setdata(result);\n        if (result.messages.length === 0) {\n          setIsEmpty(true);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoaded(true);\n      }\n    }\n    ;\n    fetchConvo();\n  }, [chatId, url]);\n  return loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-page\",\n    children: /*#__PURE__*/_jsxDEV(Chatbox, {\n      messages: (data === null || data === void 0 ? void 0 : data.messages) || [],\n      reload: fetchConvo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n}\n_s(ChatboxPage, \"MpZc0+MepXrOkt+3dCam2S8y44U=\", false, function () {\n  return [useParams];\n});\n_c = ChatboxPage;\nexport default ChatboxPage;\nvar _c;\n$RefreshReg$(_c, \"ChatboxPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Chatbox","jsxDEV","_jsxDEV","ChatboxPage","_s","chatId","url","data","setdata","loaded","setLoaded","isEmpty","setIsEmpty","fetchConvo","useCallback","info","fetch","credentials","result","json","ok","Error","message","messages","length","err","console","log","className","children","reload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Pages/chatboxpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './chatboxpage.css';\r\nimport Chatbox from '../Components/chatbox';\r\n\r\n\r\n\r\nfunction ChatboxPage() {\r\nconst {chatId}=useParams();\r\nconst url=`http://localhost:5000/user/chats/${chatId}`;\r\nconst [data,setdata]=useState(null);\r\nconst[loaded,setLoaded]=useState(false);\r\nconst[ isEmpty,setIsEmpty]=useState(false);\r\n    \r\n    const fetchConvo = useCallback(async () => {\r\n\r\n    { setLoaded(false); // Reset loaded state at the start of fetch\r\n      setIsEmpty(false); // Reset isEmpty state\r\n\r\n\r\n        \r\n    try\r\n    {\r\n     const info= await fetch(url,{credentials:'include'});\r\n     const result=await  info.json();\r\n        if (!info.ok) {\r\n                    // If server responded with an error status (e.g., 404, 500)\r\n                    throw new Error(result.message || 'Failed to fetch conversation.');\r\n                }\r\n     setdata(result);\r\n      if(result.messages.length===0)\r\n     {\r\n        setIsEmpty(true);\r\n     }\r\n   \r\n\r\n    }\r\n    catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n    finally\r\n    {\r\n        setLoaded(true);\r\n    }\r\n};\r\nfetchConvo();\r\n\r\n\r\n},\r\n [chatId, url])\r\n\r\n\r\n   \r\n    return (\r\n\r\n        loaded?(\r\n        <div className=\"chatbox-page\">\r\n         \r\n          \r\n          <Chatbox messages={data?.messages || []} reload={fetchConvo} />\r\n        </div>\r\n        ):\r\n        (\r\n            <div>\r\n                <h1>Loading chats</h1>\r\n            </div>\r\n\r\n        )\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ChatboxPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAACC;EAAM,CAAC,GAACN,SAAS,CAAC,CAAC;EAC1B,MAAMO,GAAG,GAAC,oCAAoCD,MAAM,EAAE;EACtD,MAAM,CAACE,IAAI,EAACC,OAAO,CAAC,GAACZ,QAAQ,CAAC,IAAI,CAAC;EACnC,MAAK,CAACa,MAAM,EAACC,SAAS,CAAC,GAACd,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAK,CAAEe,OAAO,EAACC,UAAU,CAAC,GAAChB,QAAQ,CAAC,KAAK,CAAC;EAEtC,MAAMiB,UAAU,GAAGC,WAAW,CAAC,YAAY;IAE3C;MAAEJ,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;MAClBE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;MAIrB,IACA;QACC,MAAMG,IAAI,GAAE,MAAMC,KAAK,CAACV,GAAG,EAAC;UAACW,WAAW,EAAC;QAAS,CAAC,CAAC;QACpD,MAAMC,MAAM,GAAC,MAAOH,IAAI,CAACI,IAAI,CAAC,CAAC;QAC5B,IAAI,CAACJ,IAAI,CAACK,EAAE,EAAE;UACF;UACA,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,+BAA+B,CAAC;QACtE;QACXd,OAAO,CAACU,MAAM,CAAC;QACd,IAAGA,MAAM,CAACK,QAAQ,CAACC,MAAM,KAAG,CAAC,EAC9B;UACGZ,UAAU,CAAC,IAAI,CAAC;QACnB;MAGD,CAAC,CACD,OAAMa,GAAG,EACT;QACIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,SAED;QACIf,SAAS,CAAC,IAAI,CAAC;MACnB;IACJ;IAAC;IACDG,UAAU,CAAC,CAAC;EAGZ,CAAC,EACA,CAACR,MAAM,EAAEC,GAAG,CAAC,CAAC;EAIX,OAEIG,MAAM,gBACNP,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,eAG3B3B,OAAA,CAACF,OAAO;MAACuB,QAAQ,EAAE,CAAAhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,QAAQ,KAAI,EAAG;MAACO,MAAM,EAAEjB;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC,gBAGFhC,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAER;AAKT;AAAC9B,EAAA,CAlEQD,WAAW;EAAA,QACLJ,SAAS;AAAA;AAAAoC,EAAA,GADfhC,WAAW;AAqEpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}