{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport { Navigate, NavigationType } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  formData,\n  button_data,\n  dest_url\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [formValues, setFormValues] = useState(() => {\n    const initialValues = {};\n    formData.forEach(field => {\n      initialValues[field.name] = ''; // Initialize each field to empty string\n    });\n    return initialValues;\n  });\n  const url = `http://localhost:5000/${dest_url}`;\n  var method;\n  console.log(url);\n  method = 'POST';\n  console.log(method);\n  const handleSubmit = async event => {\n    event.preventDefault(); // <-- THIS IS THE CRUCIAL LINE: Prevent default browser form submission!\n\n    console.log(\"Submitting data:\", formValues);\n    console.log(\"--- handleSubmit TRIGGERED! ---\");\n    try {\n      const response = await fetch(url, {\n        method: method,\n        // Use the determined method\n        headers: {\n          'Content-Type': 'multipartform/json' // Tell the server we're sending JSON\n        },\n        body: JSON.stringify(formValues),\n        // Send your state data as JSON\n        credentials: 'include' // Include cookies for session management\n      });\n      const data = await response.json(); // Parse the server's JSON response\n\n      if (response.ok) {\n        console.log('Server response (success):', data);\n        if (data.redirect) {\n          navigate(data.redirect);\n        }\n        alert(data.message || 'Operation successful!');\n        // You might want to redirect, show success message, clear form, etc.\n      } else {\n        console.error('Server response (error):', data);\n        alert(data.message || 'Operation failed.');\n      }\n    } catch (error) {\n      console.error('Network or client-side error:', error);\n      alert('A network error occurred. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  };\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n    } else {\n      setSelectedFile(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-container\",\n    children: [formData.map(field => field.type === 'file' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: field.name,\n        accept: field.accept || '*/*' // Use field.accept if provided, else any file\n        ,\n        onChange: handleFileChange // <--- Use the file handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 22\n      }, this)]\n    }, field.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        name: field.name,\n        value: formValues[field.name],\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, field.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: button_data.className,\n      type: button_data.type,\n      label: button_data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"rXuWXbvwsxSJJ04OyhnYn49CB7Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Navigate","NavigationType","Button","React","useState","useNavigate","jsxDEV","_jsxDEV","Form","formData","button_data","dest_url","_s","navigate","formValues","setFormValues","initialValues","forEach","field","name","url","method","console","log","handleSubmit","event","preventDefault","response","fetch","headers","body","JSON","stringify","credentials","data","json","ok","redirect","alert","message","error","handleInputChange","e","value","target","prevValues","selectedFile","setSelectedFile","handleFileChange","files","onSubmit","className","children","map","type","label","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","key","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Components/Form.js"],"sourcesContent":["import { Navigate, NavigationType } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Form({formData,button_data,dest_url})\r\n{\r\nconst navigate = useNavigate();\r\n    const [formValues, setFormValues] = useState(() => {\r\n        const initialValues = {};\r\n        formData.forEach(field => {\r\n            initialValues[field.name] = ''; // Initialize each field to empty string\r\n        });\r\n        return initialValues;\r\n    });\r\n    const url=`http://localhost:5000/${dest_url}`;\r\n    var  method;\r\n    console.log(url);\r\n\r\n method ='POST';\r\n    \r\n    console.log(method);\t\r\n \r\n     const handleSubmit = async (event) => {\r\n        event.preventDefault(); // <-- THIS IS THE CRUCIAL LINE: Prevent default browser form submission!\r\n\r\n        console.log(\"Submitting data:\", formValues);\r\n        console.log(\"--- handleSubmit TRIGGERED! ---\"); \r\n        \r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: method, // Use the determined method\r\n                headers: {\r\n                    'Content-Type': 'multipartform/json', // Tell the server we're sending JSON\r\n                },\r\n                body: JSON.stringify(formValues), // Send your state data as JSON\r\n                credentials: 'include', // Include cookies for session management\r\n            });\r\n\r\n            const data = await response.json(); // Parse the server's JSON response\r\n\r\n            if (response.ok) {\r\n                console.log('Server response (success):', data);\r\n                if(data.redirect) {\r\n\r\n           navigate(data.redirect);\r\n        }\r\n                alert(data.message || 'Operation successful!');\r\n                // You might want to redirect, show success message, clear form, etc.\r\n            } else {\r\n                console.error('Server response (error):', data);\r\n                alert(data.message || 'Operation failed.');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error('Network or client-side error:', error);\r\n            alert('A network error occurred. Please try again.');\r\n        }\r\n      \r\n\r\n    };\r\n      const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues(prevValues => ({\r\n        ...prevValues,\r\n        [name]: value,\r\n    }))};\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\nconst handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n        setSelectedFile(e.target.files[0]);\r\n    } else {\r\n        setSelectedFile(null);\r\n    }\r\n};\r\n   \r\n    return(\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            {\r\n            formData.map((field) => (\r\n                \r\n               field.type==='file'?\r\n               (\r\n                <div key={field.key}>\r\n                    <label>{field.label}</label>\r\n                     <input\r\n                            type=\"file\"\r\n                            name={field.name}\r\n                            accept={field.accept || '*/*'} // Use field.accept if provided, else any file\r\n                            onChange={handleFileChange} // <--- Use the file handler\r\n                        />\r\n                </div>\r\n               )\r\n               :\r\n               (\r\n                <div key={field.key}>\r\n                    <label>{field.label}</label>\r\n                    <input type={field.type} name={field.name}  value={formValues[field.name]} onChange={handleInputChange}/>\r\n                </div>\r\n               )\r\n              \r\n            ))}\r\n           <Button\r\n            className={button_data.className}\r\n             type={button_data.type} label={button_data.label} \r\n              />\r\n        </form> \r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Form;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,kBAAkB;AAC3D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,IAAIA,CAAC;EAACC,QAAQ;EAACC,WAAW;EAACC;AAAQ,CAAC,EAC7C;EAAAC,EAAA;EACA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC1B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC/C,MAAMY,aAAa,GAAG,CAAC,CAAC;IACxBP,QAAQ,CAACQ,OAAO,CAACC,KAAK,IAAI;MACtBF,aAAa,CAACE,KAAK,CAACC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACpC,CAAC,CAAC;IACF,OAAOH,aAAa;EACxB,CAAC,CAAC;EACF,MAAMI,GAAG,GAAC,yBAAyBT,QAAQ,EAAE;EAC7C,IAAKU,MAAM;EACXC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAEnBC,MAAM,GAAE,MAAM;EAEXC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAElB,MAAMG,YAAY,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExBJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAET,UAAU,CAAC;IAC3CQ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAG9C,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAE;QAC9BC,MAAM,EAAEA,MAAM;QAAE;QAChBQ,OAAO,EAAE;UACL,cAAc,EAAE,oBAAoB,CAAE;QAC1C,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,UAAU,CAAC;QAAE;QAClCmB,WAAW,EAAE,SAAS,CAAE;MAC5B,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEpC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACbd,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEW,IAAI,CAAC;QAC/C,IAAGA,IAAI,CAACG,QAAQ,EAAE;UAEvBxB,QAAQ,CAACqB,IAAI,CAACG,QAAQ,CAAC;QAC1B;QACQC,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,uBAAuB,CAAC;QAC9C;MACJ,CAAC,MAAM;QACHjB,OAAO,CAACkB,KAAK,CAAC,0BAA0B,EAAEN,IAAI,CAAC;QAC/CI,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,mBAAmB,CAAC;MAC9C;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZlB,OAAO,CAACkB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDF,KAAK,CAAC,6CAA6C,CAAC;IACxD;EAGJ,CAAC;EACC,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IACnC,MAAM;MAAEvB,IAAI;MAAEwB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC7B,aAAa,CAAC8B,UAAU,KAAK;MACzB,GAAGA,UAAU;MACb,CAAC1B,IAAI,GAAGwB;IACZ,CAAC,CAAC,CAAC;EAAA,CAAC;EACJ,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM4C,gBAAgB,GAAIN,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACE,MAAM,CAACK,KAAK,IAAIP,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,EAAE;MACrCF,eAAe,CAACL,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,MAAM;MACHF,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC;EAEG,oBACIxC,OAAA;IAAM2C,QAAQ,EAAE1B,YAAa;IAAC2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAEpD3C,QAAQ,CAAC4C,GAAG,CAAEnC,KAAK,IAEhBA,KAAK,CAACoC,IAAI,KAAG,MAAM,gBAElB/C,OAAA;MAAA6C,QAAA,gBACI7C,OAAA;QAAA6C,QAAA,EAAQlC,KAAK,CAACqC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3BpD,OAAA;QACO+C,IAAI,EAAC,MAAM;QACXnC,IAAI,EAAED,KAAK,CAACC,IAAK;QACjByC,MAAM,EAAE1C,KAAK,CAAC0C,MAAM,IAAI,KAAM,CAAC;QAAA;QAC/BC,QAAQ,EAAEb,gBAAiB,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GAPAzC,KAAK,CAAC4C,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQd,CAAC,gBAINpD,OAAA;MAAA6C,QAAA,gBACI7C,OAAA;QAAA6C,QAAA,EAAQlC,KAAK,CAACqC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5BpD,OAAA;QAAO+C,IAAI,EAAEpC,KAAK,CAACoC,IAAK;QAACnC,IAAI,EAAED,KAAK,CAACC,IAAK;QAAEwB,KAAK,EAAE7B,UAAU,CAACI,KAAK,CAACC,IAAI,CAAE;QAAC0C,QAAQ,EAAEpB;MAAkB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,GAFnGzC,KAAK,CAAC4C,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd,CAGR,CAAC,eACHpD,OAAA,CAACL,MAAM;MACNiD,SAAS,EAAEzC,WAAW,CAACyC,SAAU;MAChCG,IAAI,EAAE5C,WAAW,CAAC4C,IAAK;MAACC,KAAK,EAAE7C,WAAW,CAAC6C;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAIf;AAAC/C,EAAA,CA3GQJ,IAAI;EAAA,QAEIH,WAAW;AAAA;AAAA0D,EAAA,GAFnBvD,IAAI;AA6Gb,eAAeA,IAAI;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}