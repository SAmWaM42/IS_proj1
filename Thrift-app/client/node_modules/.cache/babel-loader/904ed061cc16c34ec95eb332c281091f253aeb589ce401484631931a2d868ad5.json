{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\IS_PROJ1\\\\IS_proj1\\\\Thrift-app\\\\client\\\\src\\\\Components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  formData,\n  button_data,\n  dest_url\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [formValues, setFormValues] = useState(() => {\n    const initialValues = {};\n    formData.forEach(field => {\n      initialValues[field.name] = ''; // Initialize each field to empty string\n    });\n    return initialValues;\n  });\n  const url = `http://localhost:5000/${dest_url}`;\n  var method;\n  console.log(url);\n  method = 'POST';\n  console.log(method);\n  const handleSubmit = async event => {\n    const SentData = new FormData();\n    event.preventDefault(); // <-- THIS IS THE CRUCIAL LINE: Prevent default browser form submission!\n\n    console.log(\"--- handleSubmit TRIGGERED! ---\");\n    for (const key in formValues) {\n      SentData.append(key, formValues[key]); // Append each field to the FormData object\n    }\n    if (selectedFile) {\n      SentData.append(\"image\", selectedFile);\n    }\n    console.log(\"Submitting data:\", SentData);\n    try {\n      const response = await fetch(url, {\n        method: method,\n        // Use the determined method\n\n        body: SentData,\n        // Send your state data as JSON\n        credentials: 'include' // Include cookies for session management\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Server response (success):', data);\n        if (data.redirect) {\n          navigate(data.redirect);\n        }\n        alert(data.message || 'Operation successful!');\n        // You might want to redirect, show success message, clear form, etc.\n      } else {\n        console.error('Server response (error):', data);\n        alert(data.message || 'Operation failed.');\n      }\n    } catch (error) {\n      console.error('Network or client-side error:', error);\n      alert('A network error occurred. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  };\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n    } else {\n      setSelectedFile(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-container\",\n    children: [formData.map(field => field.type === 'file' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: field.name,\n        accept: field.accept || '*/*' // Use field.accept if provided, else any file\n        ,\n        onChange: handleFileChange // <--- Use the file handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }, this)]\n    }, field.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }, this) : field.type === 'option' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        name: field.name,\n        value: formValues[field.name],\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }, this)]\n    }, field.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"rXuWXbvwsxSJJ04OyhnYn49CB7Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useNavigate","Button","jsxDEV","_jsxDEV","Form","formData","button_data","dest_url","_s","navigate","formValues","setFormValues","initialValues","forEach","field","name","url","method","console","log","handleSubmit","event","SentData","FormData","preventDefault","key","append","selectedFile","response","fetch","body","credentials","data","json","ok","redirect","alert","message","error","handleInputChange","e","value","target","prevValues","setSelectedFile","handleFileChange","files","onSubmit","className","children","map","type","label","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/IS_PROJ1/IS_proj1/Thrift-app/client/src/Components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\n\r\nfunction Form({ formData, button_data, dest_url }) {\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const [formValues, setFormValues] = useState(() => {\r\n        const initialValues = {};\r\n        formData.forEach(field => {\r\n            initialValues[field.name] = ''; // Initialize each field to empty string\r\n        });\r\n        return initialValues;\r\n    });\r\n    const url = `http://localhost:5000/${dest_url}`;\r\n    var method;\r\n    console.log(url);\r\n\r\n    method = 'POST';\r\n\r\n    console.log(method);\r\n\r\n    const handleSubmit = async (event) => {\r\n        const SentData = new FormData();\r\n        event.preventDefault(); // <-- THIS IS THE CRUCIAL LINE: Prevent default browser form submission!\r\n\r\n\r\n        console.log(\"--- handleSubmit TRIGGERED! ---\");\r\n\r\n\r\n        for (const key in formValues) {\r\n            SentData.append(key, formValues[key]); // Append each field to the FormData object\r\n        }\r\n        if (selectedFile) {\r\n            SentData.append(\"image\", selectedFile);\r\n        }\r\n\r\n        console.log(\"Submitting data:\", SentData);\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: method, // Use the determined method\r\n\r\n                body: SentData, // Send your state data as JSON\r\n                credentials: 'include', // Include cookies for session management\r\n            });\r\n\r\n      const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                console.log('Server response (success):', data);\r\n                if (data.redirect) {\r\n\r\n                    navigate(data.redirect);\r\n                   \r\n                }\r\n\r\n                alert(data.message || 'Operation successful!');\r\n                // You might want to redirect, show success message, clear form, etc.\r\n            } else {\r\n                console.error('Server response (error):', data);\r\n                alert(data.message || 'Operation failed.');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Network or client-side error:', error);\r\n            alert('A network error occurred. Please try again.');\r\n        }\r\n\r\n\r\n    };\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues(prevValues => ({\r\n            ...prevValues,\r\n            [name]: value,\r\n        }))\r\n    };\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setSelectedFile(e.target.files[0]);\r\n        } else {\r\n            setSelectedFile(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            {\r\n                formData.map((field) => (\r\n\r\n                    field.type === 'file' ?\r\n                        (\r\n                            <div key={field.key}>\r\n                                <label>{field.label}</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name={field.name}\r\n                                    accept={field.accept || '*/*'} // Use field.accept if provided, else any file\r\n                                    onChange={handleFileChange} // <--- Use the file handler\r\n                                />\r\n                            </div>\r\n                        ):field.type==='option'?(\r\n                            <div>\r\n                            <select>\r\n\r\n                            </select>\r\n                              </div>\r\n                        )\r\n                        :(\r\n                            <div key={field.key}>\r\n                                <label>{field.label}</label>\r\n                                <input type={field.type} name={field.name} value={formValues[field.name]} onChange={handleInputChange} />\r\n                            </div>\r\n                        )\r\n                      \r\n\r\n                ))}\r\n            <Button />\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}